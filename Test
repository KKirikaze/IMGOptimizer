import tkinter as tk
from tkinter import filedialog, messagebox
import os
import cv2

class MainWindow:
    def __init__(self, master):
        self.master = master
        self.file_path = ""
        self.width = tk.StringVar()
        self.height = tk.StringVar()

        self.create_widgets()

    def create_widgets(self):
        # 创建窗口
        self.master.title("图片优化器")
        self.master.geometry("250x320")

        # 设置窗口背景
        self.master.configure(bg="#E6E6FA")
        self.master.resizable(False, False)

        # 添加空行
        tk.Label(self.master, height=1, bg="#E6E6FA").pack()

        # 创建选择文件按钮
        self.select_file_button = tk.Button(self.master, text="选择文件", command=self.select_file, bg="#9370DB", fg="white")
        self.select_file_button.pack(pady=5)

        # 添加空行
        tk.Label(self.master, height=1, bg="#E6E6FA").pack()

        # 创建长宽输入框
        self.width_label = tk.Label(self.master, text="新宽度（像素）：", bg="#E6E6FA", fg="black")
        self.width_label.pack()
        self.width_entry = tk.Entry(self.master, textvariable=self.width)
        self.width_entry.pack()
        tk.Label(self.master, height=1, bg="#E6E6FA").pack()  # 添加空行
        self.height_label = tk.Label(self.master, text="新高度（像素）：", bg="#E6E6FA", fg="black")
        self.height_label.pack()
        self.height_entry = tk.Entry(self.master, textvariable=self.height)
        self.height_entry.pack()
        tk.Label(self.master, height=1, bg="#E6E6FA").pack()  # 添加空行

        # 创建优化按钮
        self.optimize_button = tk.Button(self.master, text="优化", command=self.optimize_file, state=tk.DISABLED, bg="#9370DB", fg="white")
        self.optimize_button.pack()
        tk.Label(self.master, height=1, bg="#E6E6FA").pack()  # 添加空行

    def select_file(self):
        # 打开文件选择对话框
        self.file_path = filedialog.askopenfilename()

        # 检查文件是否存在
        if os.path.exists(self.file_path):
            self.optimize_button.config(state=tk.NORMAL)

    def optimize_file(self):
        # 获取文件名和扩展名
        file_name, file_extension = os.path.splitext(self.file_path)

        # 打开图片文件
        img = cv2.imread(self.file_path)

        # 检查图片是否成功读取
        if img is None:
            messagebox.showerror("错误", "无法读取图片文件！")
            return

        # 获取原始大小
        original_size = os.path.getsize(self.file_path)

        # 获取长宽尺寸
        width = int(self.width.get() or 0)
        height = int(self.height.get() or 0)

        # 如果长宽尺寸都为0，则不进行resize
        if width == 0 and height == 0:
            cv2.imwrite(file_name + "_optimized" + file_extension, img)
        else:
            # 进行resize
            img = cv2.resize(img, (width, height), interpolation=cv2.INTER_AREA)
            cv2.imwrite(file_name + "_optimized" + file_extension, img)

        # 获取优化后大小
        optimized_size = os.path.getsize(file_name + "_optimized" + file_extension)

        # 提示优化完成
        messagebox.showinfo("提示", "优化完成！\n原始大小：{}字节\n优化后大小：{}字节".format(original_size, optimized_size))

# 创建主窗口
root = tk.Tk()
app = MainWindow(root)
root.mainloop()